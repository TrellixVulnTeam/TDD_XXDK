<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="16" passed="14" failed="1" skipped="1">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-06-07T08:13:24 CEST" name="Suite_Oyentes" finished-at="2021-06-07T08:13:24 CEST" duration-ms="95">
    <groups>
    </groups>
    <test started-at="2021-06-07T08:13:24 CEST" name="Test_parallel_dos" finished-at="2021-06-07T08:13:24 CEST" duration-ms="68">
      <class name="ejemplos.parallel.TestCalculadora">
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ejemplos.parallel.TestCalculadora@6f46426d]" started-at="2021-06-07T08:13:24 CEST" name="beforeMethod" finished-at="2021-06-07T08:13:24 CEST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="cuadradoFuncionaCorrectamente()[pri:0, instance:ejemplos.parallel.TestCalculadora@6f46426d]" started-at="2021-06-07T08:13:24 CEST" name="cuadradoFuncionaCorrectamente" finished-at="2021-06-07T08:13:24 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cuadradoFuncionaCorrectamente -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ejemplos.parallel.TestCalculadora@6f46426d]" started-at="2021-06-07T08:13:24 CEST" name="beforeMethod" finished-at="2021-06-07T08:13:24 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="dividirFuncionaCorrectamente()[pri:0, instance:ejemplos.parallel.TestCalculadora@6f46426d]" started-at="2021-06-07T08:13:24 CEST" name="dividirFuncionaCorrectamente" finished-at="2021-06-07T08:13:24 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- dividirFuncionaCorrectamente -->
        <test-method is-config="true" signature="beforeMethod()[pri:0, instance:ejemplos.parallel.TestCalculadora@6f46426d]" started-at="2021-06-07T08:13:24 CEST" name="beforeMethod" finished-at="2021-06-07T08:13:24 CEST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="laSumaDebeSerCorrecta()[pri:0, instance:ejemplos.parallel.TestCalculadora@6f46426d]" started-at="2021-06-07T08:13:24 CEST" name="laSumaDebeSerCorrecta" finished-at="2021-06-07T08:13:24 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- laSumaDebeSerCorrecta -->
      </class> <!-- ejemplos.parallel.TestCalculadora -->
    </test> <!-- Test_parallel_dos -->
    <test started-at="2021-06-07T08:13:24 CEST" name="Test_parallel_uno" finished-at="2021-06-07T08:13:24 CEST" duration-ms="95">
      <class name="ejemplos.parallel.Asertos_Test">
        <test-method signature="test1()[pri:0, instance:ejemplos.parallel.Asertos_Test@3541cb24]" started-at="2021-06-07T08:13:24 CEST" name="test1" finished-at="2021-06-07T08:13:24 CEST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test1 -->
        <test-method signature="test10()[pri:0, instance:ejemplos.parallel.Asertos_Test@3541cb24]" started-at="2021-06-07T08:13:24 CEST" name="test10" finished-at="2021-06-07T08:13:24 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test10 -->
        <test-method signature="test11()[pri:0, instance:ejemplos.parallel.Asertos_Test@3541cb24]" started-at="2021-06-07T08:13:24 CEST" name="test11" finished-at="2021-06-07T08:13:24 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test11 -->
        <test-method signature="test12()[pri:0, instance:ejemplos.parallel.Asertos_Test@3541cb24]" started-at="2021-06-07T08:13:24 CEST" name="test12" finished-at="2021-06-07T08:13:24 CEST" duration-ms="6" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The following asserts failed:
No es mayor que 10 expected [true] but found [false],
No es menor que 0 expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The following asserts failed:
No es mayor que 10 expected [true] but found [false],
No es menor que 0 expected [true] but found [false]
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:47)
at org.testng.asserts.SoftAssert.assertAll(SoftAssert.java:31)
at ejemplos.parallel.Asertos_Test.test12(Asertos_Test.java:188)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test12 -->
        <test-method signature="test13()[pri:0, instance:ejemplos.parallel.Asertos_Test@3541cb24]" started-at="2021-06-07T08:13:24 CEST" name="test13" finished-at="2021-06-07T08:13:24 CEST" duration-ms="1" status="SKIP">
          <exception class="org.testng.SkipException">
            <message>
              <![CDATA[Este test no tiene sentido wn Windows]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.testng.SkipException: Este test no tiene sentido wn Windows
at ejemplos.parallel.Asertos_Test.test13(Asertos_Test.java:200)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1540)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
at java.base/java.lang.Thread.run(Thread.java:834)
]]>
            </full-stacktrace>
          </exception> <!-- org.testng.SkipException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test13 -->
        <test-method signature="test2()[pri:0, instance:ejemplos.parallel.Asertos_Test@3541cb24]" started-at="2021-06-07T08:13:24 CEST" name="test2" finished-at="2021-06-07T08:13:24 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method signature="test3()[pri:0, instance:ejemplos.parallel.Asertos_Test@3541cb24]" started-at="2021-06-07T08:13:24 CEST" name="test3" finished-at="2021-06-07T08:13:24 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method signature="test4()[pri:0, instance:ejemplos.parallel.Asertos_Test@3541cb24]" started-at="2021-06-07T08:13:24 CEST" name="test4" finished-at="2021-06-07T08:13:24 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test4 -->
        <test-method signature="test5()[pri:0, instance:ejemplos.parallel.Asertos_Test@3541cb24]" started-at="2021-06-07T08:13:24 CEST" name="test5" finished-at="2021-06-07T08:13:24 CEST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test5 -->
        <test-method signature="test6()[pri:0, instance:ejemplos.parallel.Asertos_Test@3541cb24]" started-at="2021-06-07T08:13:24 CEST" name="test6" finished-at="2021-06-07T08:13:24 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test6 -->
        <test-method signature="test7()[pri:0, instance:ejemplos.parallel.Asertos_Test@3541cb24]" started-at="2021-06-07T08:13:24 CEST" name="test7" finished-at="2021-06-07T08:13:24 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test7 -->
        <test-method signature="test8()[pri:0, instance:ejemplos.parallel.Asertos_Test@3541cb24]" started-at="2021-06-07T08:13:24 CEST" name="test8" finished-at="2021-06-07T08:13:24 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test8 -->
        <test-method signature="test9()[pri:0, instance:ejemplos.parallel.Asertos_Test@3541cb24]" started-at="2021-06-07T08:13:24 CEST" name="test9" finished-at="2021-06-07T08:13:24 CEST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test9 -->
      </class> <!-- ejemplos.parallel.Asertos_Test -->
    </test> <!-- Test_parallel_uno -->
  </suite> <!-- Suite_Oyentes -->
</testng-results>
